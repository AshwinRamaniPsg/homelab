- name: Gather network facts
  ansible.builtin.setup:
    gather_subset:
      - network

- name: Create build directory
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ role_path }}/build"
    - "{{ role_path }}/build/ignition"
    - "{{ role_path }}/build/livecd"
    - "{{ role_path }}/build/tftpboot"
    - "{{ role_path }}/files/images"

- name: Download ISO
  get_url:
    url: "{{ iso_url }}"
    dest: "{{ role_path }}/files/images/{{ iso_file_name }}"
    checksum: "{{ iso_checksum }}"
  register: iso

- name: Extract the ISO
  command:
    cmd: "xorriso -osirrox on -indev {{ iso.dest }} -extract / {{ role_path }}/build/livecd"
    creates: "{{ role_path }}/build/livecd/zipl.prm"

- name: Extract bootloader
  iso_extract:
    image: "{{ role_path }}/build/livecd/images/efiboot.img"
    dest: "{{ role_path }}/build/livecd/EFI/fedora"
    files:
      - EFI/fedora/grubx64.efi

- name: Render docker compose config
  template:
    src: docker-compose.yml
    dest: "{{ role_path }}/build/docker-compose.yml"

- name: Render dnsmasq config
  template:
    src: dnsmasq.conf.j2
    dest: "{{ role_path }}/build/dnsmasq.conf"

- name: Render GRUB config
  template:
    src: grub.cfg.j2
    dest: "{{ role_path }}/build/tftpboot/grub.cfg"

- name: Render machine specific Butane config
  template:
    src: ignition.yaml.j2
    dest: "{{ role_path }}/build/ignition/{{ hostvars[item]['mac'] }}.yaml"
  loop: "{{ groups['metal'] }}"

- name: Render Ignition config from Butane config
  docker_container:
    name: butane
    image: quay.io/coreos/butane:release
    auto_remove: yes
    volumes:
      - "{{ role_path }}/build/ignition:/local/src"
    working_dir: /local/src
    command:
      - --pretty
      - --strict
      - "{{ hostvars[item]['mac'] }}.yaml"
      - --output
      - "{{ hostvars[item]['mac'] }}.json"
  loop: "{{ groups['metal'] }}"

- name: Start ephemeral PXE server
  docker_compose:
    project_src: "{{ role_path }}/build"
    state: present
    restarted: yes
    build: yes
    recreate: always
